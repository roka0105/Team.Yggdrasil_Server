pop 할때 color를 체크해서 들고 온다.

만약 black 일때 2 번 속성만 위반 한다면 해당 노드를 black 으로 바꿔주면 된다.

5번 속성을 위반한 것을 만족 시키기 위해
삭제된 색의 위치를 대체한 노드에 extra black 을 부여 







내 생각에 extra black 은 nill node 처럼 하나의 static node로 두고 extra 가 부여되는 노드들의 extra* 변수에 연결
extra가 nullptr 이면 없는것.
아니면 걍 bool값으로 현재 extra인지 아닌지 어차피 extra가 있다는건 검정이 삭제됐다는거니까.


구현할 것 
==bst에서의 pop에서==
1. pop 할 때 삭제되는 색을 판별한다. ( 삭제되는 색은 successor 또는 본인)
   자식이 0,1 이면 본인 색을 삭제
   자식이 2 이면 successor 색 삭제

2. 삭제되는 노드에 successor 노드를 올린다. 
(successor 색은 삭제 되었으니까 삭제된 노드가 가지고 있던 색으로 변경)

3.위반 여부 체크 위반했으면 rbt_delete() 수행. 
위반 여부는 삭제되는 색이 black 일 때 이다.
================

==rbt_delete 에서 ==
(총 7개 만들어야됨 ㄷㄷ)
case 4(왼/오 ver)
case 3(왼/오 ver)
case 2
case 1(왼/오 ver)
===============


==테스트==
1.delete color 테스트  
2.부모설정해줘야함 child_up 

삭제 노드 기준 한 쪽 없는 경우 (O)(O)
삭제 노드 기준 둘 다 없는 경우 (O)(O)
삭제 노드 기준 둘 다 있는 경우
   =삭제 노드 기준 오른쪽의 왼쪽에 데이터 있는경우 (O)(O)
   =삭제 노드 기준 오른쪽의 왼쪽에 데이터 없는 경우 (O)(O)

======== 



삭제된 색의 위치를 대체한 노드 = extra 붙음
삭제될 노드의 자식이 0,1 이면 본인색 삭제 본인위치가 extra
삭제될 노드의 자식이 2 이면 successor 위치를 대체한 노드가 extra


레드에 extra 가 붙었다면 = black.
우리가 변환해줘야 할 문제들은 doubly black 인 경우.


===========
pop test 

오른쪽 doubly black 에서 왼쪽 검정,왼쪽 왼쪽 자식 레드 (case 4r)  <<완료>>
오른쪽 case 3 <<완료>>

